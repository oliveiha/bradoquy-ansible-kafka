---
- name: Gather OS Facts
  setup:
    filter: ansible_os_family

- name: Load override.conf - Archive Installer
  slurp:
    src: "{{ zookeeper.systemd_override }}"
  register: slurped_override
  when: installation_method == "archive"
  tags:
    - systemd
- name: Set zookeeper_current_version variable - Archive Installer
  set_fact:
    zookeeper_current_version: "{{ (slurped_override.content|b64decode) .split('\n') |
      select('match', '^ExecStart=' + archive_config_base_path + '/confluent-(.*)/bin/zookeeper-server-start ' + zookeeper.config_file) |
      list | first | regex_search('confluent-([0-9]+(.[0-9]+)+)/bin/', '\\1') | first }}"
  when: installation_method == "archive"
  tags:
    - systemd
- name: Load zookeeper.properties
  slurp:
    src: "{{ zookeeper.config_file }}"
  register: slurped_properties

- name: Get Leader/Follower
  shell: >
    set -o pipefail &&
      {{ zookeeper_health_check_command }} | grep Mode
  args:
    executable: /bin/bash
  vars:
    archive_version: "{{ zookeeper_current_version | default(confluent_package_version) }}"
    zookeeper_ssl_enabled: "{{ (slurped_properties.content|b64decode).split('\n') |
      select('match', '^serverCnxnFactory=org.apache.zookeeper.server.NettyServerCnxnFactory') | list | length > 0 }}"
  register: leader_query
  changed_when: false
  check_mode: false

- debug:
    msg: "{{ leader_query.stdout }}"

- name: "Group Hosts by Zookeeper Mode: Follower or Leader"
  group_by:
    # Modes are either: follower, leader, standalone, will treat standalone as leaders
    key: "{{ 'zookeeper_follower' if 'follower' in leader_query.stdout else 'zookeeper_leader' }}"
  changed_when: false
